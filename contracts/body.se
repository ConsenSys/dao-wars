extern square = [rewrite_state, get_left, get_right, get_up, get_down, get_ether, get_creature, get_admin, leave, enter, harvest]

# 0
def rewrite_state(location, ether, hp, brain, species, admin):
    admin = self.storage["admin"]
    if (admin == 0) or (admin == msg.sender):
        self.storage["location"] = location
        self.storage["ether"] = ether
        self.storage["hp"] = hp
        self.storage["brain"] = brain
        self.storage["species"] = species
        self.storage["admin"] = admin

# 1
def move_left():
    current_location = self.storage["location"]
    neighbor = current_location.get_left(as=square)
    self._move(current_location, neighbor)

# 2
def move_right():
    neighbor = self.storage["location"].get_right(as=square)
    self.storage["location"] = neighbor
    self._move(current_location, neighbor)

# 3
def move_up():
    neighbor = self.storage["location"].get_up(as=square)
    self.storage["location"] = neighbor
    self._move(current_location, neighbor)

# 4
def move_down():
    neighbor = self.storage["location"].get_down(as=square)
    self.storage["location"] = neighbor
    self._move(current_location, neighbor)

# 5
def get_location():
    return(self.storage["location"])

# 6
def get_ether():
    return(self.storage["ether"])

# 7
def get_hp():
    return(self.storage["hp"])

# 8
def get_brain():
    return(self.storage["brain"])

# 9
def get_species():
    return(self.storage["species"])

# 10
def get_admin():
    return(self.storage["admin"])

# 11
def harvest():
    location = self.storage["location"]
    gain = location.harvest(as=square)
    self.storage["ether"] = self.storage["ether"] + gain
    return(gain)

# 12
def _move(current_location, destination):
    if msg.sender == self:
        if destination.get_creature(as=square) == 0:
            self.storage["location"] = destination
            current_location.leave(as=square)
            destination.enter(as=square)
