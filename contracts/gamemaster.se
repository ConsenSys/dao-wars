extern body: [notify_of_turn]

inset("basic_macros.se")

data creator
data num_creatures
data creature_list[]
data move_limit
data current_creature

def init():
    self.creator = msg.sender

def rewrite_state(creature_list:arr, move_limit):
    authenticate(self.creator)

    self.move_limit = move_limit
    self.num_creatures = len(creature_list)
    save_array(creature_list, self.creature_list)

    return(1)

def get_creature_list():
    return_array(self.creature_list:self.num_creatures)

def get_num_creatures():
    return(self.num_creatures)

def get_move_limit():
    return(self.move_limit)

def notify_of_spawn(new_creature):
    authenticate(self.current_creature)

    self.creature_list[self.num_creatures] = new_creature
    self.num_creatures += 1

def run_game():
    move = 0
    while move < self.move_limit:
        creature = 0
        while creature < self.num_creatures:
            current_creature = self.creature_list[creature]
            self.current_creature = current_creature
            current_creature.notify_of_turn(as=body)

            creature += 1

        move += 1
