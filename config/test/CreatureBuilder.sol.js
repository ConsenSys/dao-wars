"use strict";

var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var factory = function factory(Pudding) {
  // Inherit from Pudding. The dependency on Babel sucks, but it's
  // the easiest way to extend a Babel-based class. Note that the
  // resulting .js file does not have a dependency on Babel.

  var CreatureBuilder = (function (_Pudding) {
    _inherits(CreatureBuilder, _Pudding);

    function CreatureBuilder() {
      _classCallCheck(this, CreatureBuilder);

      _get(Object.getPrototypeOf(CreatureBuilder.prototype), "constructor", this).apply(this, arguments);
    }

    return CreatureBuilder;
  })(Pudding);

  ;

  // Set up specific data for this class.
  CreatureBuilder.abi = [{ "constant": false, "inputs": [], "name": "build_creature", "outputs": [{ "name": "result", "type": "address" }], "type": "function" }];
  CreatureBuilder.binary = "6060604052610df1806100126000396000f3606060405260e060020a6000350463a2bcee8b8114601a575b005b608960006060610d4c806100a5833901809050604051809103906000f09050805080600160a060020a031663e9333fab336040518260e060020a0281526004018082600160a060020a031681526020019150506000604051808303816000876161da5a03f11560025750505090565b60408051600160a060020a039092168252519081900360200190f3606060405260008054600160a060020a03191633179055610d28806100246000396000f36060604052361561013d5760e060020a600035046314fefca1811461013f5780631999eca81461016757806336b6c8fb146102b457806336cf7c871461032357806345c5b8ac1461032f5780634641257d146103635780634de2578c146104125780634f00252214610864578063516f279e146108985780636901f668146108a157806370e87aaf146108ae5780637593473c14610a8057806378cffc0914610ab45780637cd3229a14610ad857806382b022e014610aea5780638c7c9e0c14610b0e578063965fd7b614610b175780639dd807b114610b29578063a1580f1a14610b32578063aeec619714610c36578063c3fe3e2814610c6a578063d177148d14610c7c578063d8124c5f14610c90578063e9333fab14610c99578063f851a44014610ccd578063f956d3af14610cdf578063fdac3a2014610cf1575b005b61013d600435600054600160a060020a039081169033168114156101635760028290555b5050565b61013d600435600654600090819060ff60a060020a90910416801561019b5750600554600160a060020a0390811633909116145b156102af576006805460a060020a60ff021916905560075460095460e260020a6339bceb8f02606090815260649190915260ff8516608452600160a060020a03919091169063e6f3ae3c9060a49060209060448187876161da5a03f11561000257505060075460408051805160e160020a6347c4986d028252600482018190529151919550600160a060020a03929092169250638f8930da91602481810192602092909190829003018187876161da5a03f1156100025750506040805180517fa1580f1a00000000000000000000000000000000000000000000000000000000825291519193600160a060020a038516935063a1580f1a92600483810193829003018183876161da5a03f115610002575050505b505050565b6006805460a060020a60ff02191660a060020a1790556005547f36b6c8fb00000000000000000000000000000000000000000000000000000000606090815261013d91600160a060020a0316906336b6c8fb9060649060009060048183876161da5a03f115610002575050505b565b6108a460035460ff1681565b61013d600435600054600160a060020a039081169033168114156101635760088054600160a060020a031916831790555050565b61013d60065460ff60a060020a90910416801561038f5750600554600160a060020a0390811633909116145b15610321576006805460a060020a60ff02191690556007546009547fddc63262000000000000000000000000000000000000000000000000000000006060908152606491909152600160a060020a03919091169063ddc63262906084906020906024816000876161da5a03f1156100025750506040515160018054909101905550565b61013d600435602435604435600654600090819060ff60a060020a90910416801561044c5750600554600160a060020a0390811633909116145b1561085d576006805460a060020a60ff021916905560075460095460e260020a6339bceb8f02606090815260649190915260ff8716608452600160a060020a03919091169063e6f3ae3c9060a49060209060448187876161da5a03f11561000257505060075460408051805160e160020a6347c4986d028252600482018190529151919550600160a060020a03929092169250638f8930da91602481810192602092909190829003018187876161da5a03f11561000257505060405151600160a060020a031682149050801561052457506001548311155b1561085d57600660009054906101000a9004600160a060020a0316600160a060020a031663a2bcee8b6040518160e060020a0281526004018090506020604051808303816000876161da5a03f1156100025750505060405180519060200150905080600160a060020a03166378cffc09836040518260e060020a028152600401808281526020019150506000604051808303816000876161da5a03f115610002575050604080517f14fefca10000000000000000000000000000000000000000000000000000000081526003600482015290516314fefca191602481810192600092909190829003018183876161da5a03f11561000257505060408051600480547f82b022e00000000000000000000000000000000000000000000000000000000083529082015290516382b022e091602481810192600092909190829003018183876161da5a03f115610002575050604080516007547faeec6197000000000000000000000000000000000000000000000000000000008252600160a060020a03166004820152905163aeec619791602481810192600092909190829003018183876161da5a03f115610002575050604080516008547f45c5b8ac000000000000000000000000000000000000000000000000000000008252600160a060020a0316600482015290516345c5b8ac91602481810192600092909190829003018183876161da5a03f115610002575050604080516006547f4f002522000000000000000000000000000000000000000000000000000000008252600160a060020a031660048201529051634f00252291602481810192600092909190829003018183876161da5a03f11561000257505060408051600080547fe9333fab000000000000000000000000000000000000000000000000000000008352600160a060020a03166004830152915163e9333fab92602483810193919291829003018183876161da5a03f11561000257505050600760009054906101000a9004600160a060020a0316600160a060020a03166361f2de5083836040518360e060020a0281526004018083815260200182600160a060020a03168152602001925050506000604051808303816000876161da5a03f115610002575050505b5050505050565b61013d600435600054600160a060020a039081169033168114156101635760068054600160a060020a031916831790555050565b6108a460095481565b602a5b6060908152602090f35b61013d60043560065460009060ff60a060020a9091041680156108e05750600554600160a060020a0390811633909116145b15610163576006805460a060020a60ff021916905560075460095460e260020a6339bceb8f02606090815260649190915260ff8416608452600160a060020a03919091169063e6f3ae3c9060a49060209060448187876161da5a03f11561000257505060075460408051805160e160020a6347c4986d0282526004820181905291519194600160a060020a03939093169350638f8930da92602482810193602093909290839003909101908290876161da5a03f11561000257505060405151600160a060020a031660001415905061016357604080516007546009547fb5a27a2100000000000000000000000000000000000000000000000000000000835260048301529151600160a060020a03929092169163b5a27a2191602481810192600092909190829003018183876161da5a03f11561000257505050600760009054906101000a9004600160a060020a0316600160a060020a03166317a650cc826040518260e060020a028152600401808281526020019150506000604051808303816000876161da5a03f11561000257505050806009600050819055505050565b61013d600435600054600160a060020a039081169033168114156101635760058054600160a060020a031916831790555050565b61013d600435600054600160a060020a039081169033168114156101635750600955565b610d15600754600160a060020a031681565b61013d600435600054600160a060020a039081169033168114156101635750600455565b6108a460015481565b610d15600654600160a060020a031681565b6108a460045481565b6008547f7d9383c300000000000000000000000000000000000000000000000000000000606090815233600160a060020a0390811660645261013d921690637d9383c3906084906020906024816000876161da5a03f115610002575050604051516001141590506103215760028054600019019081905560001415610321576001600360006101000a81548160ff02191690830217905550600760009054906101000a9004600160a060020a0316600160a060020a031663f0a45cff6009600050546001600050546040518360e060020a02815260040180838152602001828152602001925050506000604051808303816000876161da5a03f11561000257505050565b61013d600435600054600160a060020a039081169033168114156101635760078054600160a060020a031916831790555050565b610d15600854600160a060020a031681565b6108a460065460ff60a060020a9091041681565b6108a460025481565b61013d600435600054600160a060020a039081169033168114156101635760008054600160a060020a031916831790555050565b610d15600054600160a060020a031681565b610d15600554600160a060020a031681565b61013d600435600054600160a060020a039081169033168114156101635750600155565b600160a060020a03166060908152602090f3";

  if ("0xafa8b63e470bd16b5358b28fb61f362c3e5998d7" != "") {
    CreatureBuilder.address = "0xafa8b63e470bd16b5358b28fb61f362c3e5998d7";

    // Backward compatibility; Deprecated.
    CreatureBuilder.deployed_address = "0xafa8b63e470bd16b5358b28fb61f362c3e5998d7";
  }

  CreatureBuilder.generated_with = "1.0.2";
  CreatureBuilder.contract_name = "CreatureBuilder";

  return CreatureBuilder;
};

// Nicety for Node.
factory.load = factory;

if (typeof module != "undefined") {
  module.exports = factory;
} else {
  // There will only be one version of Pudding in the browser,
  // and we can use that.
  window.CreatureBuilder = factory;
}