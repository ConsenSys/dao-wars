"use strict";

var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var factory = function factory(Pudding) {
  // Inherit from Pudding. The dependency on Babel sucks, but it's
  // the easiest way to extend a Babel-based class. Note that the
  // resulting .js file does not have a dependency on Babel.

  var Creature = (function (_Pudding) {
    _inherits(Creature, _Pudding);

    function Creature() {
      _classCallCheck(this, Creature);

      _get(Object.getPrototypeOf(Creature.prototype), "constructor", this).apply(this, arguments);
    }

    return Creature;
  })(Pudding);

  ;

  // Set up specific data for this class.
  Creature.abi = [{ "constant": true, "inputs": [], "name": "max_gasprice", "outputs": [{ "name": "", "type": "uint256" }], "type": "function" }, { "constant": false, "inputs": [{ "name": "_hp", "type": "uint256" }], "name": "set_hp", "outputs": [], "type": "function" }, { "constant": false, "inputs": [{ "name": "direction", "type": "uint8" }], "name": "attack", "outputs": [], "type": "function" }, { "constant": false, "inputs": [], "name": "notify_of_turn", "outputs": [], "type": "function" }, { "constant": true, "inputs": [], "name": "dead", "outputs": [{ "name": "", "type": "bool" }], "type": "function" }, { "constant": false, "inputs": [{ "name": "_game", "type": "address" }], "name": "set_game", "outputs": [], "type": "function" }, { "constant": false, "inputs": [], "name": "harvest", "outputs": [], "type": "function" }, { "constant": false, "inputs": [{ "name": "direction", "type": "uint8" }, { "name": "new_brain", "type": "address" }, { "name": "endowment", "type": "uint256" }], "name": "reproduce", "outputs": [], "type": "function" }, { "constant": false, "inputs": [{ "name": "_creature_builder", "type": "address" }], "name": "set_creature_builder", "outputs": [], "type": "function" }, { "constant": true, "inputs": [], "name": "location", "outputs": [{ "name": "", "type": "uint256" }], "type": "function" }, { "constant": true, "inputs": [], "name": "last_turn", "outputs": [{ "name": "", "type": "uint256" }], "type": "function" }, { "constant": false, "inputs": [], "name": "validate", "outputs": [{ "name": "result", "type": "uint8" }], "type": "function" }, { "constant": false, "inputs": [{ "name": "direction", "type": "uint8" }], "name": "move", "outputs": [], "type": "function" }, { "constant": false, "inputs": [{ "name": "_brain", "type": "address" }], "name": "set_brain", "outputs": [], "type": "function" }, { "constant": false, "inputs": [{ "name": "_location", "type": "uint256" }], "name": "set_location", "outputs": [], "type": "function" }, { "constant": true, "inputs": [], "name": "board", "outputs": [{ "name": "", "type": "address" }], "type": "function" }, { "constant": false, "inputs": [{ "name": "_species", "type": "uint256" }], "name": "set_species", "outputs": [], "type": "function" }, { "constant": true, "inputs": [], "name": "eth", "outputs": [{ "name": "", "type": "uint256" }], "type": "function" }, { "constant": true, "inputs": [], "name": "creature_builder", "outputs": [{ "name": "", "type": "address" }], "type": "function" }, { "constant": true, "inputs": [], "name": "species", "outputs": [{ "name": "", "type": "uint256" }], "type": "function" }, { "constant": false, "inputs": [], "name": "damage", "outputs": [], "type": "function" }, { "constant": false, "inputs": [{ "name": "_board", "type": "address" }], "name": "set_board", "outputs": [], "type": "function" }, { "constant": true, "inputs": [], "name": "game", "outputs": [{ "name": "", "type": "address" }], "type": "function" }, { "constant": true, "inputs": [], "name": "turn_active", "outputs": [{ "name": "", "type": "bool" }], "type": "function" }, { "constant": true, "inputs": [], "name": "hp", "outputs": [{ "name": "", "type": "uint256" }], "type": "function" }, { "constant": false, "inputs": [{ "name": "_admin", "type": "address" }], "name": "set_admin", "outputs": [], "type": "function" }, { "constant": true, "inputs": [], "name": "admin", "outputs": [{ "name": "", "type": "address" }], "type": "function" }, { "constant": true, "inputs": [], "name": "brain", "outputs": [{ "name": "", "type": "address" }], "type": "function" }, { "constant": false, "inputs": [{ "name": "_eth", "type": "uint256" }], "name": "set_eth", "outputs": [], "type": "function" }, { "inputs": [], "type": "constructor" }];
  Creature.binary = "606060405260008054600160a060020a0319163317905564174876e800600b55610da38061002d6000396000f3606060405236156101535760e060020a6000350463056f07a1811461015557806314fefca11461015e5780631999eca81461018657806336b6c8fb146102d357806336cf7c871461039457806345c5b8ac146103a05780634641257d146103d45780634de2578c146104845780634f002522146108d6578063516f279e1461090a57806353b2c45d146109135780636901f6681461091c57806370e87aaf146109295780637593473c14610afb57806378cffc0914610b2f5780637cd3229a14610b5357806382b022e014610b655780638c7c9e0c14610b89578063965fd7b614610b925780639dd807b114610ba4578063a1580f1a14610bad578063aeec619714610cb1578063c3fe3e2814610ce5578063d177148d14610cf7578063d8124c5f14610d0b578063e9333fab14610d14578063f851a44014610d48578063f956d3af14610d5a578063fdac3a2014610d6c575b005b61091f600b5481565b610153600435600054600160a060020a039081169033168114156101825760028290555b5050565b610153600435600654600090819060ff60a060020a9091041680156101ba5750600554600160a060020a0390811633909116145b156102ce576006805460a060020a60ff021916905560075460095460e260020a6339bceb8f02606090815260649190915260ff8516608452600160a060020a03919091169063e6f3ae3c9060a49060209060448187876161da5a03f11561000257505060075460408051805160e160020a6347c4986d028252600482018190529151919550600160a060020a03929092169250638f8930da91602481810192602092909190829003018187876161da5a03f1156100025750506040805180517fa1580f1a00000000000000000000000000000000000000000000000000000000825291519193600160a060020a038516935063a1580f1a92600483810193829003018183876161da5a03f115610002575050505b505050565b610153600060006000600043600a600050541080156102f45750600b543a11155b1561038e576006805460a060020a60ff02191660a060020a179055600154600a3a600b0204900493505a6005547f36b6c8fb000000000000000000000000000000000000000000000000000000006060908152919450600160a060020a0316906336b6c8fb9086906064908590600481838887f11561000257505050505a60018054918503600a3a600b0204810292839003909155925090505b50505050565b61091f60035460ff1681565b610153600435600054600160a060020a039081169033168114156101825760088054600160a060020a031916831790555050565b61015360065460ff60a060020a9091041680156104005750600554600160a060020a0390811633909116145b15610482576006805460a060020a60ff02191690556007546009547fddc63262000000000000000000000000000000000000000000000000000000006060908152606491909152600160a060020a03919091169063ddc63262906084906020906024816000876161da5a03f11561000257505060405151600180549091019055505b565b610153600435602435604435600654600090819060ff60a060020a9091041680156104be5750600554600160a060020a0390811633909116145b156108cf576006805460a060020a60ff021916905560075460095460e260020a6339bceb8f02606090815260649190915260ff8716608452600160a060020a03919091169063e6f3ae3c9060a49060209060448187876161da5a03f11561000257505060075460408051805160e160020a6347c4986d028252600482018190529151919550600160a060020a03929092169250638f8930da91602481810192602092909190829003018187876161da5a03f11561000257505060405151600160a060020a031682149050801561059657506001548311155b156108cf57600660009054906101000a9004600160a060020a0316600160a060020a031663a2bcee8b6040518160e060020a0281526004018090506020604051808303816000876161da5a03f1156100025750505060405180519060200150905080600160a060020a03166378cffc09836040518260e060020a028152600401808281526020019150506000604051808303816000876161da5a03f115610002575050604080517f14fefca10000000000000000000000000000000000000000000000000000000081526003600482015290516314fefca191602481810192600092909190829003018183876161da5a03f11561000257505060408051600480547f82b022e00000000000000000000000000000000000000000000000000000000083529082015290516382b022e091602481810192600092909190829003018183876161da5a03f115610002575050604080516007547faeec6197000000000000000000000000000000000000000000000000000000008252600160a060020a03166004820152905163aeec619791602481810192600092909190829003018183876161da5a03f115610002575050604080516008547f45c5b8ac000000000000000000000000000000000000000000000000000000008252600160a060020a0316600482015290516345c5b8ac91602481810192600092909190829003018183876161da5a03f115610002575050604080516006547f4f002522000000000000000000000000000000000000000000000000000000008252600160a060020a031660048201529051634f00252291602481810192600092909190829003018183876161da5a03f11561000257505060408051600080547fe9333fab000000000000000000000000000000000000000000000000000000008352600160a060020a03166004830152915163e9333fab92602483810193919291829003018183876161da5a03f11561000257505050600760009054906101000a9004600160a060020a0316600160a060020a03166361f2de5083836040518360e060020a0281526004018083815260200182600160a060020a03168152602001925050506000604051808303816000876161da5a03f115610002575050505b5050505050565b610153600435600054600160a060020a039081169033168114156101825760068054600160a060020a031916831790555050565b61091f60095481565b61091f600a5481565b602a5b6060908152602090f35b61015360043560065460009060ff60a060020a90910416801561095b5750600554600160a060020a0390811633909116145b15610182576006805460a060020a60ff021916905560075460095460e260020a6339bceb8f02606090815260649190915260ff8416608452600160a060020a03919091169063e6f3ae3c9060a49060209060448187876161da5a03f11561000257505060075460408051805160e160020a6347c4986d0282526004820181905291519194600160a060020a03939093169350638f8930da92602482810193602093909290839003909101908290876161da5a03f11561000257505060405151600160a060020a031660001415905061018257604080516007546009547fb5a27a2100000000000000000000000000000000000000000000000000000000835260048301529151600160a060020a03929092169163b5a27a2191602481810192600092909190829003018183876161da5a03f11561000257505050600760009054906101000a9004600160a060020a0316600160a060020a03166317a650cc826040518260e060020a028152600401808281526020019150506000604051808303816000876161da5a03f11561000257505050806009600050819055505050565b610153600435600054600160a060020a039081169033168114156101825760058054600160a060020a031916831790555050565b610153600435600054600160a060020a039081169033168114156101825750600955565b610d90600754600160a060020a031681565b610153600435600054600160a060020a039081169033168114156101825750600455565b61091f60015481565b610d90600654600160a060020a031681565b61091f60045481565b6008547f7d9383c300000000000000000000000000000000000000000000000000000000606090815233600160a060020a03908116606452610153921690637d9383c3906084906020906024816000876161da5a03f115610002575050604051516001141590506104825760028054600019019081905560001415610482576001600360006101000a81548160ff02191690830217905550600760009054906101000a9004600160a060020a0316600160a060020a031663f0a45cff6009600050546001600050546040518360e060020a02815260040180838152602001828152602001925050506000604051808303816000876161da5a03f11561000257505050565b610153600435600054600160a060020a039081169033168114156101825760078054600160a060020a031916831790555050565b610d90600854600160a060020a031681565b61091f60065460ff60a060020a9091041681565b61091f60025481565b610153600435600054600160a060020a039081169033168114156101825760008054600160a060020a031916831790555050565b610d90600054600160a060020a031681565b610d90600554600160a060020a031681565b610153600435600054600160a060020a039081169033168114156101825750600155565b600160a060020a03166060908152602090f3";

  if ("0x91b7aa68f189e0a7d0b6fc84d2da9ecd23a6aa55" != "") {
    Creature.address = "0x91b7aa68f189e0a7d0b6fc84d2da9ecd23a6aa55";

    // Backward compatibility; Deprecated.
    Creature.deployed_address = "0x91b7aa68f189e0a7d0b6fc84d2da9ecd23a6aa55";
  }

  Creature.generated_with = "1.0.2";
  Creature.contract_name = "Creature";

  return Creature;
};

// Nicety for Node.
factory.load = factory;

if (typeof module != "undefined") {
  module.exports = factory;
} else {
  // There will only be one version of Pudding in the browser,
  // and we can use that.
  window.Creature = factory;
}