"use strict";

var _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ("value" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var factory = function factory(Pudding) {
  // Inherit from Pudding. The dependency on Babel sucks, but it's
  // the easiest way to extend a Babel-based class. Note that the
  // resulting .js file does not have a dependency on Babel.

  var Board = (function (_Pudding) {
    _inherits(Board, _Pudding);

    function Board() {
      _classCallCheck(this, Board);

      _get(Object.getPrototypeOf(Board.prototype), "constructor", this).apply(this, arguments);
    }

    return Board;
  })(Pudding);

  ;

  // Set up specific data for this class.
  Board.abi = [{ "constant": false, "inputs": [], "name": "num_squares", "outputs": [{ "name": "", "type": "uint256" }], "type": "function" }, { "constant": false, "inputs": [{ "name": "location", "type": "uint256" }], "name": "enter_square", "outputs": [], "type": "function" }, { "constant": true, "inputs": [{ "name": "", "type": "uint256" }], "name": "dimensions", "outputs": [{ "name": "", "type": "uint256" }], "type": "function" }, { "constant": false, "inputs": [{ "name": "x", "type": "uint256" }, { "name": "y", "type": "uint256" }], "name": "set_dimensions", "outputs": [], "type": "function" }, { "constant": false, "inputs": [{ "name": "_game", "type": "address" }], "name": "set_game", "outputs": [], "type": "function" }, { "constant": false, "inputs": [{ "name": "location", "type": "uint256" }, { "name": "obstacle", "type": "bool" }, { "name": "_eth", "type": "uint256" }, { "name": "creature", "type": "address" }], "name": "replace_square", "outputs": [], "type": "function" }, { "constant": true, "inputs": [], "name": "harvest_amount", "outputs": [{ "name": "", "type": "uint256" }], "type": "function" }, { "constant": true, "inputs": [{ "name": "", "type": "uint256" }], "name": "eth", "outputs": [{ "name": "", "type": "uint256" }], "type": "function" }, { "constant": false, "inputs": [{ "name": "location", "type": "uint256" }, { "name": "creature", "type": "address" }], "name": "spawn", "outputs": [], "type": "function" }, { "constant": true, "inputs": [], "name": "in_loop", "outputs": [{ "name": "", "type": "bool" }], "type": "function" }, { "constant": false, "inputs": [{ "name": "_harvest_amount", "type": "uint256" }], "name": "set_harvest_amount", "outputs": [], "type": "function" }, { "constant": true, "inputs": [{ "name": "", "type": "uint256" }], "name": "creatures", "outputs": [{ "name": "", "type": "address" }], "type": "function" }, { "constant": false, "inputs": [{ "name": "num_deposits", "type": "uint8" }, { "name": "amount_per_deposit", "type": "uint256" }], "name": "deposit_eth", "outputs": [], "type": "function" }, { "constant": false, "inputs": [], "name": "all_obstacles", "outputs": [{ "name": "", "type": "bool[]" }], "type": "function" }, { "constant": false, "inputs": [{ "name": "location", "type": "uint256" }], "name": "leave_square", "outputs": [], "type": "function" }, { "constant": false, "inputs": [{ "name": "location", "type": "uint256" }, { "name": "creature", "type": "address" }], "name": "add_creature", "outputs": [], "type": "function" }, { "constant": true, "inputs": [], "name": "game", "outputs": [{ "name": "", "type": "address" }], "type": "function" }, { "constant": false, "inputs": [], "name": "all_eth", "outputs": [{ "name": "", "type": "uint256[]" }], "type": "function" }, { "constant": false, "inputs": [{ "name": "location", "type": "uint256" }], "name": "harvest", "outputs": [{ "name": "result", "type": "uint256" }], "type": "function" }, { "constant": false, "inputs": [{ "name": "location", "type": "uint256" }, { "name": "direction", "type": "uint8" }], "name": "neighbor", "outputs": [{ "name": "result", "type": "uint256" }], "type": "function" }, { "constant": false, "inputs": [{ "name": "_admin", "type": "address" }], "name": "set_admin", "outputs": [], "type": "function" }, { "constant": false, "inputs": [], "name": "all_creatures", "outputs": [{ "name": "", "type": "address[]" }], "type": "function" }, { "constant": false, "inputs": [{ "name": "location", "type": "uint256" }, { "name": "_eth", "type": "uint256" }], "name": "report_death", "outputs": [], "type": "function" }, { "constant": true, "inputs": [{ "name": "", "type": "uint256" }], "name": "obstacles", "outputs": [{ "name": "", "type": "bool" }], "type": "function" }, { "constant": true, "inputs": [], "name": "admin", "outputs": [{ "name": "", "type": "address" }], "type": "function" }, { "inputs": [], "type": "constructor" }];
  Board.binary = "60606040526007805433600160a060020a031990911681179091556006805461010060a860020a031916610100909202919091179055610c91806100436000396000f3606060405236156101275760e060020a60003504630539c6d6811461012957806317a650cc1461013357806324eb95fe146101e05780633cb260b2146101f857806345c5b8ac1461026d5780634edccd31146102b657806352d4bb02146103925780635b4ef70b1461039b57806361f2de50146103c657806366ab88ee14610492578063680f0eda1461049e5780638f8930da146104c257806398804938146104f6578063b070bdc614610583578063b5a27a211461061c578063ba50f965146106c4578063c3fe3e2814610707578063c7df0a901461071e578063ddc6326214610786578063e6f3ae3c1461087c578063e9333fab146108ae578063eecc3be8146108e4578063f0a45cff14610954578063f6a5414d146109fc578063f851a44014610a48575b005b610a5a6002545b90565b610127600435600660019054906101000a9004600160a060020a0316600160a060020a0316637d9383c3336040518260e060020a0281526004018082600160a060020a031681526020019150506020604051808303816000876161da5a03f115610002575050604051516001141590506108e1573360026000508281548110156100025750600052600080516020610c518339815191529091018054600160a060020a0319169091179055565b610a5a60043560038160028110156100025750015481565b610127600435602435600754600160a060020a03908116903316811415610ad8576003839055600482905560018054838502808355919082908015829011610add576000839052610add90600080516020610c718339815191529081019083015b80821115610b1a5760008155600101610259565b610127600435600754600160a060020a039081169033168114156108df5760068054610100840274ffffffffffffffffffffffffffffffffffffffff0019919091161790555050565b610127600435602435604435606435600754600160a060020a0390811690331681141561038b578360006000508681548110156100025790805260208082047f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5630191066101000a81548160ff02191690830217905550826001600050868154811015610002576000918252600080516020610c7183398151915201905055600280548391908790811015610002575060005250600080516020610c5183398151915285018054600160a060020a031916831790555b5050505050565b610a5a60055481565b610a5a6004356001805482908110156100025750600052600080516020610c71833981519152015481565b610127600435602435600660019054906101000a9004600160a060020a0316600160a060020a0316637d9383c3336040518260e060020a0281526004018082600160a060020a031681526020019150506020604051808303816000876161da5a03f115610002575050604051516001149050806104525750600754600160a060020a0390811633909116145b156108df5780600260005083815481101561000257600091909152600080516020610c51833981519152018054600160a060020a03191690911790555050565b610a5a60065460ff1681565b610127600435600754600160a060020a039081169033168114156108df5750600555565b610a6c6004356002805482908110156100025750600052600080516020610c518339815191520154600160a060020a031681565b610127600435602435600754600090819081908190600160a060020a03908116903316811415610ad35743600019014094505b8660ff168460ff161015610ad3576001805461010087049660ff9081900695508582020493508791908490811015610002576000829052600080516020610c71833981519152018054929092019091559390930192610529565b604080516020818101835260008083528351815480840282018401909552848152610a8994909283018282801561077a579080526020028101907f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5639084905b825461010083900a900460ff168152602060019283018181049485019490930390920291018084116105e257905050505050509050610130565b610127600435600660019054906101000a9004600160a060020a0316600160a060020a0316637d9383c3336040518260e060020a0281526004018082600160a060020a031681526020019150506020604051808303816000876161da5a03f115610002575050604051516001141590506108e1576000600260005082815481101561000257509052600080516020610c51833981519152018054600160a060020a0319169055565b610127600435602435806002600050838154811015610002575060005250600080516020610c518339815191529091018054600160a060020a0319169091179055565b610a6c6006546101009004600160a060020a031681565b610a8960408051602081810183526000825282516001805480840283018401909552848252929390929183018282801561077a57602002820191906000526020600020905b816000505481526020019060010190808311610763575b50505050509050610130565b610a5a6004356000600660019054906101000a9004600160a060020a0316600160a060020a0316637d9383c3336040518260e060020a0281526004018082600160a060020a031681526020019150506020604051808303816000876161da5a03f115610002575050604051516001141590506108775760055460018054849081101561000257508252600080516020610c718339815191528301541115610b5f576001805460055491908490811015610002575050600080516020610c718339815191528301805491909103905560055460405133600160a060020a031691839182818181858883f1509093505050505b919050565b610a5a60043560243560008160ff16600014801561089e575060035483068114155b15610bf257506000198201610bec565b610127600435600754600160a060020a039081169033168114156108df5760078054600160a060020a031916831790555b505b50565b610a8960408051602081810183526000825260028054845181840281018401909552808552929392909183018282801561077a57602002820191906000526020600020905b8154600160a060020a0316815260019190910190602001808311610929575b50505050509050610130565b61012760043560243533600160a060020a031660026000508381548110156100025750600052600080516020610c51833981519152830154600160a060020a031614156108df576000600260005083815481101561000257600080516020610c5183398151915281018054600160a060020a031916905560018054859450909250811015610002575060005250600080516020610c7183398151915290910180549091019055565b610a5a6004356000805482908110156100025750805260208082047f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563015491066101000a900460ff1681565b610a6c600754600160a060020a031681565b60408051918252519081900360200190f35b60408051600160a060020a03929092168252519081900360200190f35b60405180806020018281038252838181518152602001915080519060200190602002808383829060006004602084601f0104600302600f01f1509050019250505060405180910390f35b505050505b505050565b50505050818302600260005081815481835581811511610b1e576000839052610b1e90600080516020610c51833981519152908101908301610259565b5090565b50505050818302600060005081815481835581811511610ad357601f016020900481601f01602090048360005260206000209182019101610ad39190610259565b6001805483908110156100025760008281528254600080516020610c71833981519152929092015493509190849081101561000257600080516020610c71833981519152018290555060405133600160a060020a03169190839082818181858883f1506108779350505050565b8160ff166002148015610be0575060035483115b15610c1d575060035482035b92915050565b8160ff166001148015610c0e5750600354600019810190840614155b15610bcc575060018201610bec565b8160ff166003148015610c395750600354600454026000190183105b15610c4957506003548201610bec565b506000610bec56405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5aceb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6";

  if ("" != "") {
    Board.address = "";

    // Backward compatibility; Deprecated.
    Board.deployed_address = "";
  }

  Board.generated_with = "1.0.2";
  Board.contract_name = "Board";

  return Board;
};

// Nicety for Node.
factory.load = factory;

if (typeof module != "undefined") {
  module.exports = factory;
} else {
  // There will only be one version of Pudding in the browser,
  // and we can use that.
  window.Board = factory;
}